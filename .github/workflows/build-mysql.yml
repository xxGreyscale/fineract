name: Fineract Build & Test - MySQL
on: [push, pull_request]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-22.04

    services:
        mariad:
            image: mysql:8.0
            ports:
                - 3306:3306
            env:
                MYSQL_ROOT_PASSWORD: mysql
            options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

        mock-oauth2-server:
          image: ghcr.io/navikt/mock-oauth2-server:1.0.0
          ports:
            - 9000:9000
          env:
            SERVER_PORT: 9000
            JSON_CONFIG: '{ "interactiveLogin": true, "httpServer": "NettyWrapper", "tokenCallbacks": [ { "issuerId": "auth/realms/fineract", "tokenExpiry": 120, "requestMappings": [{ "requestParam": "scope", "match": "fineract", "claims": { "sub": "mifos", "scope": [ "test" ] } } ] } ] }'

    env:
        TZ: Asia/Kolkata
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
      - name: Set up JDK 17
        uses: actions/setup-java@cd89f46ac9d01407894225f350157564c9c7cee2 # v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: gradle
      - uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3
        with:
          node-version: 16
      - name: Congfigure vega-cli
        run: npm i -g vega-cli --unsafe
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@56b90f209b02bf6d1deae490e9ef18b21a389cd4
      - name: Verify MariaDB connection
        run: |
            while ! mysqladmin ping -h"127.0.0.1" -P3306 ; do
                sleep 1
            done
      - name: Initialise databases
        run: |
            ./gradlew --no-daemon -q createMySQLDB -PdbName=fineract_tenants
            ./gradlew --no-daemon -q createMySQLDB -PdbName=fineract_default
      - name: Start LocalStack
        env:
          AWS_ENDPOINT_URL: http://localhost:4566
          AWS_ACCESS_KEY_ID: localstack
          AWS_SECRET_ACCESS_KEY: localstack
          AWS_REGION: us-east-1
        run: |
          docker run -d --name localstack -p 4566:4566 -p 4510-4559:4510-4559 localstack/localstack:2.1
          sleep 10
          docker exec localstack awslocal s3api create-bucket --bucket fineract-reports
          echo "LocalStack initialization complete"
      - name: Install additional software
        run: |
            sudo apt-get update
            sudo apt-get install ghostscript graphviz -y

      - name: Build & Test
        env:
          AWS_ENDPOINT_URL: http://localhost:4566
          AWS_ACCESS_KEY_ID: localstack
          AWS_SECRET_ACCESS_KEY: localstack
          AWS_REGION: us-east-1
          FINERACT_REPORT_EXPORT_S3_ENABLED: true
          FINERACT_REPORT_EXPORT_S3_BUCKET_NAME: fineract-reports
        run: |
            ./gradlew --no-daemon --console=plain build -x cucumber -x test -x doc
            ./gradlew --no-daemon --console=plain cucumber
            ./gradlew --no-daemon --console=plain test -x :twofactor-tests:test -x :oauth2-test:test -PdbType=mysql
            ./gradlew --no-daemon --console=plain :twofactor-tests:test -PdbType=mysql
            ./gradlew --no-daemon --console=plain :oauth2-tests:test -PdbType=mysql

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@694cdabd8bdb0f10b2cea11669e1bf5453eed0a6 # tag=v3
        with:
          name: test-results
          path: |
            integration-tests/build/reports/
            twofactor-tests/build/reports/
            oauth2-tests/build/reports/

      - name: Archive server logs
        if: always()
        uses: actions/upload-artifact@694cdabd8bdb0f10b2cea11669e1bf5453eed0a6 # tag=v3
        with:
          name: server-logs
          path: |
            integration-tests/build/cargo/
            twofactor-tests/build/cargo/
            oauth2-tests/build/cargo/
